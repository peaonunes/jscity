{"version":3,"sources":["serviceWorker.js","blocksPallet.js","nodeTypes.js","cityFactory.js","parser.js","Navigation/Navigation.js","Details/Details.js","GitHub/GitHub.js","Scene/Controls.js","Scene/Block.js","Scene/City.js","Scene/index.js","App.js","index.js","GitHub/GitHub.module.css","Details/Details.module.css","Navigation/Navigation.module.css"],"names":["Boolean","window","location","hostname","match","blocksPallet","Project","File","FunctionDeclaration","nodeTypes","FILE","PROJECT","FUNCTION","PROGRAM","BLOCK","EXPRESSION","CALL_EXPRESSION","ROAD_SIZE_OFFSET","getSize","block","nodes","roadsOffset","children","reduce","offset","childId","cec","type","loc","buildCity","city","root","queue","id","childOffsetX","childOffsetY","childOffsetZ","color","position","length","pop","parentX","get","parent","parentZ","size","i","child","xCoodinate","yCoordinate","zCoordinate","unshift","acc","getProjectSize","getStartLine","node","getEndLine","getNodeId","countLoc","startLine","start","line","end","traverse","getId","callExpressionsCount","name","endLine","newNode","push","body","program","expression","parse","sourceCode","counter","project","babelParser","sourceType","plugins","files","Object","keys","filter","key","projectLoc","sum","projectCec","Navigation","autoRotate","setAutoRotate","handleUpload","useState","open","setOpen","className","styles","navigation","menu","settings","htmlFor","role","aria-label","style","display","accept","onChange","e","target","toggle","onClick","Fragment","divider","options","option","value","checked","Details","details","title","ellipsis","content","GitHub","github","href","rel","extend","OrbitControls","Controls","controls","useRef","useThree","camera","gl","useFrame","current","update","ref","args","domElement","enableDamping","dampingFactor","maxZoom","minZoom","maxPolarAngle","Math","PI","Block","selectedBlock","onSelect","geom","useMemo","BoxBufferGeometry","userData","stopPropagation","eventObject","castShadow","receiveShadow","attach","Plane","rotation","City","map","blockId","Scene","orthographic","zoom","up","far","onCreated","shadowMap","enabled","THREE","intensity","penumbra","App","setSelectedBlock","setCodeSource","fileReader","FileReader","onloadend","result","readAsText","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.537e4f01.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const blocksPallet = {\n  Project: '#757575',\n  File: '#bdbdbd',\n  FunctionDeclaration: '#e41a1c'\n};\n\nexport default blocksPallet;\n","const nodeTypes = {\n  FILE: 'File',\n  PROJECT: 'Project',\n  FUNCTION: 'FunctionDeclaration',\n  PROGRAM: 'Program',\n  BLOCK: 'BlockStatement',\n  EXPRESSION: 'ExpressionStatement',\n  CALL_EXPRESSION: 'CallExpression'\n};\n\nexport default nodeTypes;\n","import get from 'lodash/get';\n\nimport blocksPallet from './blocksPallet';\nimport nodeTypes from './nodeTypes';\n\nconst ROAD_SIZE_OFFSET = 1;\n\nfunction getSize(block, nodes) {\n  const roadsOffset = block.children.reduce((offset, childId) => {\n    return offset + (nodes[childId].cec || 1) + 1;\n  }, 0);\n  const x = (block.cec || 1) + roadsOffset;\n  const y = block.type === nodeTypes.FUNCTION ? block.loc || 1 : 1;\n  const z = (block.cec || 1) + roadsOffset;\n  return [x, y, z];\n}\n\nfunction getProjectSize(city) {\n  return city[nodeTypes.PROJECT].children.reduce(\n    (acc, childId) => {\n      const size = get(city, `${childId}.size`);\n      const x = size[0] + acc[0];\n      const y = 1;\n      const z = size[2] + acc[2];\n      return [x, y, z];\n    },\n    [1, 1, 1]\n  );\n}\n\nfunction buildCity(nodes) {\n  const city = {};\n  const root = nodes[nodeTypes.PROJECT];\n  const queue = [root.id];\n  let childOffsetX = 0;\n  let childOffsetY = 0;\n  let childOffsetZ = 0;\n\n  city[root.id] = {\n    ...root,\n    color: blocksPallet[root.type],\n    position: [childOffsetX, childOffsetY, childOffsetZ]\n  };\n\n  while (queue.length) {\n    // Current block\n    const block = city[queue.pop()];\n\n    // If the block has parent its children offset is based on his parent position\n    const parentX = get(city, `${block.parent}.position[0]`, 0);\n    const parentZ = get(city, `${block.parent}.position[2]`, 0);\n    childOffsetX = block.position[0] + parentX;\n    childOffsetZ = block.position[2] + parentZ;\n\n    /*\n     * Defining the start offset based on current block size, position and offset for roads.\n     * The geometry grows on both directions on X, Y and Z. For example:\n     * Geometry on position = [0,0,0] and size = [1,1,1] will have it boundarias like:\n     *  on X = -0.5 to 0.5\n     *  on Y = -0.5 to 0.5\n     *  on Z = -0.5 to 0.5\n     * Since half of the geometry will go in one direction from the start point and\n     * another half on the opposite direcation we have to calculate any offset\n     * adding or removing the size of the geometry divided by 2.\n     */\n    const type = get(city, `${block.id}.type`);\n    if (type === nodeTypes.FUNCTION) {\n      childOffsetX = childOffsetX - block.size[0] / 2 + ROAD_SIZE_OFFSET;\n      childOffsetY = block.position[1] + block.size[1] / 2;\n      childOffsetZ = childOffsetZ - block.size[2] / 2 + ROAD_SIZE_OFFSET;\n    } else if (type === nodeTypes.FILE) {\n      childOffsetX = childOffsetX - block.size[0] / 2 + ROAD_SIZE_OFFSET;\n      childOffsetY = block.position[1] + 0.5;\n      childOffsetZ = childOffsetZ - block.size[2] / 2 + ROAD_SIZE_OFFSET;\n    } else {\n      childOffsetY = block.position[1] + 0.5;\n    }\n\n    for (let i = 0; i < block.children.length; i++) {\n      const childId = block.children[i];\n\n      // Add child to city nodes\n      const child = nodes[childId];\n      const size = getSize(child, nodes);\n\n      let xCoodinate = childOffsetX;\n      let yCoordinate = childOffsetY + size[1] / 2;\n      let zCoordinate = childOffsetZ;\n\n      if (child.type === nodeTypes.FUNCTION) {\n        xCoodinate += size[0] / 2;\n        zCoordinate += size[2] / 2;\n      }\n\n      // Add position as the current offset\n      city[child.id] = {\n        ...child,\n        color: blocksPallet[child.type],\n        position: [xCoodinate, yCoordinate, zCoordinate],\n        size\n      };\n\n      // Update offset for siblings based on the current child\n      childOffsetX = childOffsetX + size[0] + ROAD_SIZE_OFFSET;\n      childOffsetZ = childOffsetZ + size[2] + ROAD_SIZE_OFFSET;\n\n      // Add child to the processing queue\n      queue.unshift(child.id);\n    }\n  }\n\n  city[root.id].size = getProjectSize(city);\n\n  return city;\n}\n\nexport default buildCity;\n","import * as babelParser from '@babel/parser';\nimport get from 'lodash/get';\n\nimport nodeTypes from './nodeTypes';\n\nfunction getStartLine(node) {\n  return get(node, 'loc.start.line');\n}\n\nfunction getEndLine(node) {\n  return get(node, 'loc.end.line');\n}\n\nfunction getNodeId(node) {\n  return get(node, 'id.name', '');\n}\n\nfunction countLoc({ loc }) {\n  const startLine = loc.start.line;\n  const endLine = loc.end.line;\n  return endLine - startLine + 1;\n}\n\nfunction newNode(node, getId) {\n  return {\n    id: getId(),\n    name: getNodeId(node),\n    type: node.type,\n    loc: countLoc(node),\n    startLine: getStartLine(node),\n    endLine: getEndLine(node),\n    children: []\n  };\n}\n\nfunction traverse(root, parent, nodes, getId) {\n  let callExpressionsCount = 0;\n\n  switch (root.type) {\n    case nodeTypes.FUNCTION:\n    case nodeTypes.FILE:\n      const node = newNode(root, getId);\n\n      nodes[node.id] = node;\n      nodes[parent].children.push(node.id);\n      nodes[node.id].parent = parent;\n\n      if (node.type === nodeTypes.FUNCTION) {\n        callExpressionsCount = traverse(root.body, node.id, nodes, getId);\n      } else {\n        callExpressionsCount = traverse(root.program, node.id, nodes, getId);\n      }\n\n      nodes[node.id].cec = callExpressionsCount;\n\n      return callExpressionsCount;\n    case nodeTypes.PROGRAM:\n    case nodeTypes.BLOCK:\n      return root.body.reduce((acc, child) => {\n        return acc + traverse(child, parent, nodes, getId);\n      }, 0);\n    case nodeTypes.EXPRESSION:\n      return traverse(root.expression, parent, nodes, getId);\n    case nodeTypes.CALL_EXPRESSION:\n      return 1;\n    default:\n      return 0;\n  }\n}\n\nfunction parse(sourceCode) {\n  let counter = 0;\n  function getId() {\n    return counter++;\n  }\n\n  const nodes = {};\n  const project = {\n    id: nodeTypes.PROJECT,\n    type: nodeTypes.PROJECT,\n    children: []\n  };\n  nodes[project.id] = project;\n\n  const ast = babelParser.parse(sourceCode, {\n    sourceType: 'module',\n    plugins: ['jsx']\n  });\n  traverse(ast, nodeTypes.PROJECT, nodes, getId);\n\n  const files = Object.keys(nodes).filter(\n    key => nodes[key].type === nodeTypes.FILE\n  );\n  const projectLoc = files.reduce((sum, key) => sum + (nodes[key].loc || 0), 0);\n  const projectCec = files.reduce((sum, key) => sum + (nodes[key].cec || 0), 0);\n  nodes[project.id].loc = projectLoc;\n  nodes[project.id].cec = projectCec;\n\n  return nodes;\n}\n\nexport default parse;\n","import React, { useState } from 'react';\n\nimport styles from './Navigation.module.css';\n\nfunction Navigation({ autoRotate, setAutoRotate, handleUpload }) {\n  const [open, setOpen] = useState(false);\n  const toggleOpen = () => setOpen(!open);\n\n  return (\n    <nav className={styles.navigation}>\n      <h1>JSCity</h1>\n      <div className={styles.menu}>\n        <div className={styles.settings}>\n          <div>\n            <label htmlFor=\"upload\">\n              <span role=\"img\" aria-label=\"upload\">\n                📂\n              </span>{' '}\n              upload file\n            </label>\n            <input\n              style={{ display: 'none' }}\n              id=\"upload\"\n              type=\"file\"\n              accept=\".js,.jsx\"\n              onChange={e => handleUpload(e.target.files)}\n            />\n          </div>\n          <button className={styles.toggle} onClick={toggleOpen}>\n            <span role=\"img\" aria-label=\"open settings\">\n              ⚙️\n            </span>\n          </button>\n        </div>\n        {open && (\n          <React.Fragment>\n            <div className={styles.divider} />\n            <div className={styles.options}>\n              <div className={styles.option}>\n                <input\n                  id=\"autoRotate\"\n                  type=\"checkbox\"\n                  value={autoRotate}\n                  checked={autoRotate}\n                  onChange={setAutoRotate}\n                />\n                <label htmlFor=\"autoRotate\">auto rotate</label>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    </nav>\n  );\n}\nexport default Navigation;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport blocksPallet from '../blocksPallet';\nimport styles from './Details.module.css';\n\nfunction Details({ block }) {\n  const [open, setOpen] = useState(true);\n  const toggleOpen = () => setOpen(!open);\n\n  return (\n    <div className={styles.details}>\n      <div className={styles.title}>\n        <strong className={styles.ellipsis} title={get(block, 'name', '')}>\n          {get(block, 'name', '')}\n        </strong>\n        <button className={styles.toggle} onClick={toggleOpen}>\n          {open && '🙈'}\n          {!open && '🐵'}\n        </button>\n      </div>\n      {open && (\n        <React.Fragment>\n          <div className={styles.divider} />\n          <div className={styles.content}>\n            <div className={styles.ellipsis} title={get(block, 'id', '')}>\n              <strong>Id: </strong>\n              {get(block, 'id', '')}\n            </div>\n            <div className={styles.ellipsis} title={get(block, 'type', '')}>\n              <strong>Type: </strong>\n              <span style={{ color: blocksPallet[get(block, 'type', '')] }}>\n                ●{' '}\n              </span>\n              {get(block, 'type', '')}\n            </div>\n            <div className={styles.ellipsis} title={get(block, 'loc', '')}>\n              <strong>Lines of Code: </strong>\n              {get(block, 'loc', '')}\n            </div>\n            <div className={styles.ellipsis} title={get(block, 'cec', '')}>\n              <strong>Call Expressions: </strong>\n              {get(block, 'cec', '')}\n            </div>\n            <div\n              className={styles.ellipsis}\n              title={get(block, 'startLine', '')}>\n              <strong>Start line: </strong>\n              {get(block, 'startLine', '')}\n            </div>\n            <div className={styles.ellipsis} title={get(block, 'endLine', '')}>\n              <strong>End line: </strong>\n              {get(block, 'endLine', '')}\n            </div>\n            <div className={styles.ellipsis} title={get(block, 'parent', '')}>\n              <strong>Parent id: </strong>\n              {get(block, 'parent', '')}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nDetails.propTypes = {\n  block: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    loc: PropTypes.number.isRequired,\n    children: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n    ).isRequired,\n    cec: PropTypes.number.isRequired,\n    startLine: PropTypes.number,\n    endLine: PropTypes.number,\n    parent: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n  }).isRequired\n};\n\nexport default Details;\n","import React from 'react';\n\nimport styles from './GitHub.module.css';\n\nfunction GitHub() {\n  return (\n    <div className={styles.github}>\n      <a\n        href=\"https://github.com/peaonunes/jscity\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        GitHub\n      </a>\n    </div>\n  );\n}\n\nexport default GitHub;\n","import { extend, useThree, useFrame } from 'react-three-fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport React, { useRef } from 'react';\n\nextend({ OrbitControls });\n\nfunction Controls({ autoRotate }) {\n  const controls = useRef();\n  const { camera, gl } = useThree();\n\n  useFrame(() => controls.current.update());\n\n  return (\n    <orbitControls\n      autoRotate={autoRotate}\n      ref={controls}\n      args={[camera, gl.domElement]}\n      enableDamping\n      dampingFactor={0.1}\n      maxZoom={40}\n      minZoom={1}\n      maxPolarAngle={Math.PI / 2}\n    />\n  );\n}\n\nexport default Controls;\n","import { BoxBufferGeometry } from 'three';\nimport React, { useMemo } from 'react';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\n\nfunction Block({ block, selectedBlock, onSelect }) {\n  const geom = useMemo(() => new BoxBufferGeometry(...block.size), [block]);\n  const handleClick = e => {\n    e.stopPropagation();\n    onSelect(e.eventObject.userData);\n  };\n  const color = get(selectedBlock, 'id') === block.id ? 'white' : block.color;\n\n  return (\n    <mesh\n      userData={block}\n      position={block.position}\n      onClick={handleClick}\n      castShadow\n      receiveShadow>\n      <meshPhysicalMaterial attach=\"material\" color={color} />\n      <boxBufferGeometry attach=\"geometry\" args={block.size} />\n      <lineSegments>\n        <edgesGeometry attach=\"geometry\" args={[geom]} />\n        <lineBasicMaterial color=\"black\" attach=\"material\" />\n      </lineSegments>\n    </mesh>\n  );\n}\n\nBlock.propTypes = {\n  block: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    loc: PropTypes.number.isRequired,\n    children: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n    ).isRequired,\n    cec: PropTypes.number.isRequired,\n    parent: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    position: PropTypes.arrayOf(PropTypes.number).isRequired,\n    size: PropTypes.arrayOf(PropTypes.number).isRequired,\n    color: PropTypes.string.isRequired\n  }).isRequired,\n  selectedBlock: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n  }),\n  onSelect: PropTypes.func.isRequired\n};\n\nexport default Block;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Block from './Block';\n\nconst Plane = () => (\n  <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -0.5, 0]} receiveShadow>\n    <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n    <meshPhysicalMaterial attach=\"material\" color=\"#377eb8\" />\n  </mesh>\n);\n\nfunction City({ city, selectedBlock, onSelect }) {\n  return (\n    <React.Fragment>\n      <group>\n        {Object.keys(city).map(blockId => (\n          <Block\n            key={blockId}\n            block={city[blockId]}\n            selectedBlock={selectedBlock}\n            onSelect={onSelect}\n          />\n        ))}\n      </group>\n      <Plane />\n    </React.Fragment>\n  );\n}\n\nCity.propTypes = {\n  city: PropTypes.object.isRequired,\n  selectedBlock: PropTypes.object,\n  onSelect: PropTypes.func\n};\n\nexport default City;\n","import { Canvas } from 'react-three-fiber';\nimport PropTypes from 'prop-types';\nimport * as THREE from 'three';\nimport React from 'react';\n\nimport Controls from './Controls';\nimport City from './City';\n\nfunction Scene({ city, selectedBlock, onSelect, autoRotate }) {\n  return (\n    <Canvas\n      className=\"canva\"\n      orthographic\n      camera={{\n        position: [25, 25, 55],\n        zoom: 5,\n        up: [0, 1, 0],\n        far: 1000\n      }}\n      onCreated={({ gl }) => {\n        gl.shadowMap.enabled = true;\n        gl.shadowMap.type = THREE.PCFSoftShadowMap;\n      }}>\n      <ambientLight intensity={0.75} />\n      <spotLight position={[0, 50, 100]} penumbra={1} castShadow />\n      <City city={city} selectedBlock={selectedBlock} onSelect={onSelect} />\n      <Controls autoRotate={autoRotate} />\n    </Canvas>\n  );\n}\n\nScene.propTypes = {\n  autoRotate: PropTypes.bool.isRequired,\n  city: PropTypes.object.isRequired,\n  selectedBlock: PropTypes.object,\n  onSelect: PropTypes.func\n};\n\nexport default Scene;\n","import React, { useState, useMemo } from 'react';\nimport get from 'lodash/get';\n\nimport buildCity from './cityFactory';\nimport parse from './parser';\n\nimport Navigation from './Navigation';\nimport Details from './Details';\nimport GitHub from './GitHub';\nimport Scene from './Scene';\n\nfunction App() {\n  const [autoRotate, setAutoRotate] = useState(true);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [sourceCode, setCodeSource] = useState();\n\n  const handleUpload = files => {\n    if (files == null) return;\n    const fileReader = new FileReader();\n    fileReader.onloadend = () => {\n      setCodeSource(fileReader.result);\n    };\n    fileReader.readAsText(files[0]);\n  };\n\n  const handleSelect = block => {\n    if (block.id === get(selectedBlock, 'id', '')) {\n      setSelectedBlock(null);\n    } else {\n      setSelectedBlock(block);\n    }\n  };\n\n  const toggleAutoRotate = () => setAutoRotate(!autoRotate);\n\n  const city = useMemo(() => {\n    if (!sourceCode) return {};\n    const nodes = parse(sourceCode);\n    return buildCity(nodes);\n  }, [sourceCode]);\n\n  return (\n    <React.Fragment>\n      <Navigation\n        autoRotate={autoRotate}\n        setAutoRotate={toggleAutoRotate}\n        handleUpload={handleUpload}\n      />\n      {selectedBlock && <Details block={selectedBlock} />}\n      <Scene\n        city={city}\n        selectedBlock={selectedBlock}\n        onSelect={handleSelect}\n        autoRotate={autoRotate}\n      />\n      <GitHub />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"github\":\"GitHub_github__A_70Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"Details_details__S35Wv\",\"title\":\"Details_title__nJ_Go\",\"ellipsis\":\"Details_ellipsis__237XE\",\"toggle\":\"Details_toggle__2D3gZ\",\"divider\":\"Details_divider__29NC1\",\"content\":\"Details_content__9f6wH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__Weesd\",\"menu\":\"Navigation_menu__2d1Hw\",\"settings\":\"Navigation_settings__20t9x\",\"toggle\":\"Navigation_toggle__1Xtjc\",\"divider\":\"Navigation_divider__3PBSu\",\"options\":\"Navigation_options__1gFcg\"};"],"sourceRoot":""}